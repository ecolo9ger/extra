using System;
using System.Collections;
using System.Collections.Generic;
using Newtonsoft.Json;
using System.Net.Json;

namespace WindowsFormsApplication7
{
    static class ExtraManager
    {
        public static DateTime convertSunLunar(DateTime dt)//양력을 음력 변환
        {
            int n윤월;
            int n음력년, n음력월, n음력일;
            bool b윤달 = false;
            System.Globalization.KoreanLunisolarCalendar 음력 =
            new System.Globalization.KoreanLunisolarCalendar();


            n음력년 = 음력.GetYear(dt);
            n음력월 = 음력.GetMonth(dt);
            n음력일 = 음력.GetDayOfMonth(dt);
            if (음력.GetMonthsInYear(n음력년) > 12)             //1년이 12이상이면 윤달이 있음..
            {
                b윤달 = 음력.IsLeapMonth(n음력년, n음력월);     //윤월인지
                n윤월 = 음력.GetLeapMonth(n음력년);             //년도의 윤달이 몇월인지?
                if (n음력월 >= n윤월)                           //달이 윤월보다 같거나 크면 -1을 함 즉 윤8은->9 이기때문
                    n음력월--;
            }
            return new DateTime(int.Parse(n음력년.ToString()), int.Parse(n음력월.ToString()), int.Parse(n음력일.ToString()));
        }
        public static DateTime convertLunarSun(int n음력년, int n음력월, int n음력일)//음력을 양력 변환
        {
            System.Globalization.KoreanLunisolarCalendar 음력 =
            new System.Globalization.KoreanLunisolarCalendar();

            bool b달 = 음력.IsLeapMonth(n음력년, n음력월);
            int n윤월;

            if (음력.GetMonthsInYear(n음력년) > 12)
            {
                n윤월 = 음력.GetLeapMonth(n음력년);
                if (b달)
                    n음력월++;
                if (n음력월 > n윤월)
                    n음력월++;
            }
            try
            {
                음력.ToDateTime(n음력년, n음력월, n음력일, 0, 0, 0, 0);
            }
            catch
            {
                return 음력.ToDateTime(n음력년, n음력월, 음력.GetDaysInMonth(n음력년, n음력월), 0, 0, 0, 0);//음력은 마지막 날짜가 매달 다르기 때문에 예외 뜨면 그날 맨 마지막 날로 지정
            }

            return 음력.ToDateTime(n음력년, n음력월, n음력일, 0, 0, 0, 0);
        }
    }

    class HolidayList
    {
        List<Holiday> _HolidayList;

        public HolidayList()
        {
          
        }
                

        public string GetHoliday(string dt)
        {
            for (int i = 0; i < _HolidayList.Count; i++)
            {
                if (_HolidayList[i].HoliDate == dt)
                {
                    return _HolidayList[i].HoliName;
                }
            }

            return null;
        }

        

        public void CreateHoliday(DateTime pCurrentDate)
        {
            _HolidayList = new List<Holiday>();

            //양력
            _HolidayList.Add(new Holiday("0101", "신정"));
            _HolidayList.Add(new Holiday("0301", "삼일절"));
            _HolidayList.Add(new Holiday("0505", "어린이날"));
            _HolidayList.Add(new Holiday("0606", "현충일"));
            _HolidayList.Add(new Holiday("0815", "광복절"));
            _HolidayList.Add(new Holiday("1003", "개천절"));
            _HolidayList.Add(new Holiday("1225", "성탄절"));

            //음력
            //설날3일
            //설날 날짜지정
                        
            _HolidayList.Add(new Holiday(ExtraManager.convertLunarSun(pCurrentDate.Year - 1, 12, 30).ToString("MMdd"), "설날"));
            _HolidayList.Add(new Holiday(ExtraManager.convertLunarSun(pCurrentDate.Year,1,1).ToString("MMdd"), "설날"));
            _HolidayList.Add(new Holiday(ExtraManager.convertLunarSun(pCurrentDate.Year, 1, 2).ToString("MMdd"), "설날"));

            //석가탄신일
            _HolidayList.Add(new Holiday(ExtraManager.convertLunarSun(pCurrentDate.Year, 4, 8).ToString("MMdd"), "석가탄신일"));

            //추석
            _HolidayList.Add(new Holiday(ExtraManager.convertLunarSun(pCurrentDate.Year, 8, 14).ToString("MMdd"), "추석"));
            _HolidayList.Add(new Holiday(ExtraManager.convertLunarSun(pCurrentDate.Year, 8, 15).ToString("MMdd"), "추석"));
            _HolidayList.Add(new Holiday(ExtraManager.convertLunarSun(pCurrentDate.Year, 8, 16).ToString("MMdd"), "추석"));
        }
    }

    class Holiday
    {       
        public string HoliDate { get; private set; }
        public string HoliName { get; private set; }

        public Holiday(string pHoliDate, string pHoliName)
        {
            this.HoliDate = pHoliDate;
            this.HoliName = pHoliName;

          

        }
      
    }

    class SolarTerma
    {
        Hashtable SolarTermaDate;
        string _CurrentYear;

        public string getSolarTermaDate(string dt)
        {
            
            string[] solar24Date = getSolarTerma();
            string[] solar24Name = new string[] { "입춘(立春)", "우수(雨水)", "경칩(驚蟄)", "춘분(春分)", "청명(淸明)", "곡우(穀雨)", "입하(立夏)", "소만(小滿)", "망종(茫種)", "하지(夏至)", "소서(小署)", "대서(大署)", "입추(立秋)", "처서(處署)", "백로(白露)", "추분(秋分)", "한로(寒露)", "상강(霜降)", "입동(立冬)", "소설(小雪)", "대설(大雪)", "동지(冬至)", "소한(小寒)", "대한(大寒)" };


            for(int i =0; i < solar24Date.Length;i++)
            {
                if (solar24Date[i].Equals(dt))
                {
                    return solar24Name[i];
                }
            }
            return null;
        }
        private string[] getSolarTerma()
        {
            
            if (SolarTermaDate.ContainsKey(_CurrentYear)) {

               
                return (string[])SolarTermaDate[_CurrentYear];
    
            }

            return null;
        }

        public SolarTerma(DateTime pCurrentDate)
        {
            _CurrentYear = pCurrentDate.ToString("yyyy");
           SolarTermaDate = new Hashtable();

            //년도, 입춘, 우수, 경칩, 춘분,
            SolarTermaDate.Add("1980", new string[24] {"0205","0219","0305","0320","0405","0420","0505","0521","0605","0621","0707","0723","0807","0823","0907","0923","1008","1023","1107","1122","1207","1222","0106","0121"});
            SolarTermaDate.Add("1981", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0505", "0521", "0606", "0621", "0707", "0723", "0807", "0823", "0908", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("1982", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0506", "0521", "0606", "0622", "0707", "0723", "0808", "0823", "0908", "0923", "1009", "1024", "1108", "1123", "1207", "1222", "0106", "0120" });
            SolarTermaDate.Add("1983", new string[24] { "0204", "0219", "0306", "0321", "0405", "0421", "0506", "0522", "0606", "0622", "0708", "0723", "0808", "0824", "0908", "0923", "1009", "1024", "1108", "1123", "1208", "1222", "0106", "0121" });
            SolarTermaDate.Add("1984", new string[24] { "0205", "0219", "0305", "0320", "0404", "0420", "0505", "0521", "0605", "0621", "0707", "0723", "0807", "0823", "0907", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0106", "0121" });
            SolarTermaDate.Add("1985", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0505", "0521", "0606", "0621", "0707", "0723", "0807", "0823", "0908", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("1986", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0506", "0521", "0606", "0622", "0707", "0723", "0808", "0823", "0908", "0923", "1008", "1024", "1108", "1122", "1207", "1222", "0106", "0120" });
            SolarTermaDate.Add("1987", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0506", "0521", "0606", "0622", "0708", "0723", "0808", "0824", "0908", "0923", "1009", "1024", "1108", "1123", "1208", "1222", "0106", "0120" });
            SolarTermaDate.Add("1988", new string[24] { "0204", "0219", "0305", "0320", "0404", "0420", "0505", "0521", "0605", "0621", "0707", "0722", "0807", "0823", "0907", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0106", "0121" });
            SolarTermaDate.Add("1989", new string[24] { "0204", "0219", "0305", "0321", "0405", "0420", "0505", "0521", "0606", "0621", "0707", "0723", "0807", "0823", "0908", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("1990", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0506", "0521", "0606", "0622", "0707", "0723", "0808", "0823", "0908", "0923", "1008", "1024", "1108", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("1991", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0506", "0521", "0606", "0622", "0707", "0723", "0808", "0824", "0908", "0923", "1009", "1024", "1108", "1123", "1207", "1222", "0106", "0120" });
            SolarTermaDate.Add("1992", new string[24] { "0204", "0219", "0305", "0320", "0404", "0420", "0505", "0521", "0605", "0621", "0707", "0722", "0807", "0823", "0907", "0923", "1008", "1023", "1107", "1122", "1207", "1221", "0106", "0121" });
            SolarTermaDate.Add("1993", new string[24] { "0204", "0219", "0305", "0320", "0405", "0420", "0505", "0521", "0606", "0621", "0707", "0723", "0807", "0823", "0908", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("1994", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0506", "0521", "0606", "0621", "0707", "0723", "0808", "0823", "0908", "0923", "1008", "1024", "1108", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("1995", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0506", "0521", "0606", "0622", "0707", "0723", "0808", "0823", "0908", "0923", "1009", "1024", "1108", "1123", "1207", "1222", "0106", "0120" });
            SolarTermaDate.Add("1996", new string[24] { "0204", "0219", "0305", "0320", "0404", "0420", "0505", "0521", "0605", "0621", "0707", "0722", "0807", "0823", "0907", "0923", "1008", "1023", "1107", "1122", "1207", "1221", "0106", "0121" });
            SolarTermaDate.Add("1997", new string[24] { "0204", "0218", "0305", "0320", "0405", "0420", "0505", "0521", "0606", "0621", "0707", "0723", "0807", "0823", "0907", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("1998", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0506", "0521", "0606", "0621", "0707", "0723", "0808", "0823", "0908", "0923", "1008", "1023", "1108", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("1999", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0506", "0521", "0606", "0622", "0707", "0723", "0808", "0823", "0908", "0923", "1009", "1024", "1108", "1123", "1207", "1222", "0106", "0120" });
            SolarTermaDate.Add("2000", new string[24] { "0204", "0219", "0305", "0320", "0404", "0420", "0505", "0521", "0605", "0621", "0707", "0722", "0807", "0823", "0907", "0923", "1008", "1023", "1107", "1122", "1207", "1221", "0106", "0121" });
            SolarTermaDate.Add("2001", new string[24] { "0204", "0218", "0305", "0320", "0405", "0420", "0505", "0521", "0605", "0621", "0707", "0723", "0807", "0823", "0907", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("2002", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0506", "0521", "0606", "0621", "0707", "0723", "0808", "0823", "0908", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("2003", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0506", "0521", "0606", "0622", "0707", "0723", "0808", "0823", "0908", "0923", "1009", "1024", "1108", "1123", "1207", "1222", "0106", "0120" });
            SolarTermaDate.Add("2004", new string[24] { "0204", "0219", "0305", "0320", "0404", "0420", "0505", "0521", "0605", "0621", "0707", "0722", "0807", "0823", "0907", "0923", "1008", "1023", "1107", "1122", "1207", "1221", "0106", "0121" });
            SolarTermaDate.Add("2005", new string[24] { "0204", "0218", "0305", "0320", "0405", "0420", "0505", "0521", "0605", "0621", "0707", "0723", "0807", "0823", "0907", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("2006", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0506", "0521", "0606", "0621", "0707", "0723", "0808", "0823", "0908", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("2007", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0506", "0521", "0606", "0622", "0707", "0723", "0808", "0823", "0908", "0923", "1009", "1024", "1108", "1123", "1207", "1222", "0106", "0120" });
            SolarTermaDate.Add("2008", new string[24] { "0204", "0219", "0305", "0320", "0404", "0420", "0505", "0521", "0605", "0621", "0707", "0722", "0807", "0823", "0907", "0923", "1008", "1023", "1107", "1122", "1207", "1221", "0106", "0121" });
            SolarTermaDate.Add("2009", new string[24] { "0204", "0218", "0305", "0320", "0405", "0420", "0505", "0521", "0605", "0621", "0707", "0723", "0807", "0823", "0907", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("2010", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0505", "0521", "0606", "0621", "0707", "0723", "0807", "0823", "0908", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("2011", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0506", "0521", "0606", "0622", "0707", "0723", "0808", "0823", "0908", "0923", "1009", "1024", "1108", "1123", "1207", "1222", "0106", "0120" });
            SolarTermaDate.Add("2012", new string[24] { "0204", "0219", "0305", "0320", "0404", "0420", "0505", "0521", "0605", "0621", "0707", "0722", "0807", "0823", "0907", "0922", "1008", "1023", "1107", "1122", "1207", "1221", "0106", "0121" });
            SolarTermaDate.Add("2013", new string[24] { "0204", "0218", "0305", "0320", "0405", "0420", "0505", "0521", "0605", "0621", "0707", "0723", "0807", "0823", "0907", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("2014", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0505", "0521", "0606", "0621", "0707", "0723", "0807", "0823", "0908", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("2015", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0506", "0521", "0606", "0622", "0707", "0723", "0808", "0823", "0908", "0923", "1008", "1024", "1108", "1123", "1207", "1222", "0106", "0120" });
            SolarTermaDate.Add("2016", new string[24] { "0204", "0219", "0305", "0320", "0404", "0420", "0505", "0520", "0605", "0621", "0707", "0722", "0807", "0823", "0907", "0922", "1008", "1023", "1107", "1122", "1207", "1221", "0106", "0121" });
            SolarTermaDate.Add("2017", new string[24] { "0204", "0218", "0305", "0320", "0404", "0420", "0505", "0521", "0605", "0621", "0707", "0723", "0807", "0823", "0907", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("2018", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0505", "0521", "0606", "0621", "0707", "0723", "0807", "0823", "0908", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("2019", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0506", "0521", "0606", "0622", "0707", "0723", "0808", "0823", "0908", "0923", "1008", "1024", "1108", "1122", "1207", "1222", "0106", "0120" });
            SolarTermaDate.Add("2020", new string[24] { "0204", "0219", "0305", "0320", "0404", "0419", "0505", "0520", "0605", "0621", "0707", "0722", "0807", "0823", "0907", "0922", "1008", "1023", "1107", "1122", "1207", "1221", "0106", "0120" });
            SolarTermaDate.Add("2021", new string[24] { "0203", "0218", "0305", "0320", "0404", "0420", "0505", "0521", "0605", "0621", "0707", "0722", "0807", "0823", "0907", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("2022", new string[24] { "0204", "0219", "0305", "0321", "0405", "0420", "0505", "0521", "0606", "0621", "0707", "0723", "0807", "0823", "0908", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("2023", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0506", "0521", "0606", "0621", "0707", "0723", "0808", "0823", "0908", "0923", "1008", "1024", "1108", "1122", "1207", "1222", "0106", "0120" });
            SolarTermaDate.Add("2024", new string[24] { "0204", "0219", "0305", "0320", "0404", "0419", "0505", "0520", "0605", "0621", "0706", "0722", "0807", "0822", "0907", "0922", "1008", "1023", "1107", "1122", "1207", "1221", "0106", "0120" });
            SolarTermaDate.Add("2025", new string[24] { "0203", "0218", "0305", "0320", "0404", "0420", "0505", "0521", "0605", "0621", "0707", "0722", "0807", "0823", "0907", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("2026", new string[24] { "0204", "0219", "0305", "0320", "0405", "0420", "0505", "0521", "0606", "0621", "0707", "0723", "0807", "0823", "0907", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("2027", new string[24] { "0204", "0219", "0306", "0321", "0405", "0420", "0506", "0521", "0606", "0621", "0707", "0723", "0808", "0823", "0908", "0923", "1008", "1024", "1108", "1122", "1207", "1222", "0105", "0120" });
            SolarTermaDate.Add("2028", new string[24] { "0204", "0219", "0305", "0320", "0404", "0419", "0505", "0520", "0605", "0621", "0706", "0722", "0807", "0822", "0907", "0922", "1008", "1023", "1107", "1122", "1206", "1221", "0106", "0120" });
            SolarTermaDate.Add("2029", new string[24] { "0203", "0218", "0305", "0320", "0404", "0420", "0505", "0521", "0605", "0621", "0707", "0722", "0807", "0823", "0907", "0923", "1008", "1023", "1107", "1122", "1207", "1221", "0105", "0120" });
            SolarTermaDate.Add("2030", new string[24] { "0204", "0218", "0305", "0320", "0405", "0420", "0505", "0521", "0605", "0621", "0707", "0723", "0807", "0823", "0907", "0923", "1008", "1023", "1107", "1122", "1207", "1222", "0105", "0120" });

    }

        
}

    
}
